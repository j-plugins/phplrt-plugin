{
  parserClass="com.github.xepozz.phplrtplugin.language.PhplrtParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Phplrt"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.xepozz.phplrtplugin.psi"
  psiImplPackage="com.github.xepozz.phplrtplugin.psi.impl"

  elementTypeHolderClass="com.github.xepozz.phplrtplugin.psi.PhplrtTypes"
  elementTypeClass="com.github.xepozz.phplrtplugin.psi.PhplrtElementType"
  tokenTypeClass="com.github.xepozz.phplrtplugin.psi.PhplrtTokenType"

  psiImplUtilClass="com.github.xepozz.phplrtplugin.psi.impl.PhplrtPsiImplUtil"
}

phplrtFile ::= item_*

private item_ ::= (metaDecl|ruleDecl|COMMENT|NEWLINE)

metaDecl ::= (META_START (TOKEN|SKIP|PRAGMA) identifier VALUE NEWLINE)
{
    pin=1
    mixin="com.github.xepozz.phplrtplugin.psi.impl.PhplrtNamedElementImpl"
    implements="com.github.xepozz.phplrtplugin.psi.PhplrtNamedElement"
    methods=[getName setName getNameIdentifier]
}
ruleDecl ::= (ruleModifier? identifier COLON expressions SEMICOLON)
{
    pin=3
//    mixin="com.github.xepozz.phplrtplugin.psi.impl.PhplrtNamedElementImpl"
//    implements="com.github.xepozz.phplrtplugin.psi.PhplrtNamedElement"
//    methods=[getName setName getValue setValue getNameIdentifier]
}
expressions ::= expression (operator? expression)*
expression ::= tokenReference | ruleReference
ruleReference ::= identifier PARENTHESES_OPEN PARENTHESES_CLOSE
//{
//    mixin="com.github.xepozz.phplrtplugin.psi.impl.PhplrtNamedElementImpl"
//    implements=["com.github.xepozz.phplrtplugin.psi.PhplrtNamedElement" "com.intellij.model.psi.PsiExternalReferenceHost"]
//    methods=[getName setName getNameIdentifier]
//}
tokenReference ::= hiddenTokenReference | visibleTokenReference
//{
//    mixin="com.github.xepozz.phplrtplugin.psi.impl.PhplrtNamedElementImpl"
//    implements=["com.github.xepozz.phplrtplugin.psi.PhplrtNamedElement"]
//    methods=[getName setName getNameIdentifier]
//}
private hiddenTokenReference ::= (DOUBLE_COLON identifier DOUBLE_COLON)
{
    pin=2
}
private visibleTokenReference ::= (LEFT_ARROW identifier RIGHT_ARROW)
{
    pin=2
}
identifier ::= LITERAL
//{
//    mixin="com.github.xepozz.phplrtplugin.psi.impl.PhplrtNamedElementImpl"
//    implements=["com.github.xepozz.phplrtplugin.psi.PhplrtNamedElement" "com.intellij.model.psi.PsiExternalReferenceHost"]
//    methods=[getName setName getNameIdentifier]
//}
operator ::= OP_OR
ruleModifier ::= RULE_MODIFIER_HIDDEN